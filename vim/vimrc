" Using pathogen for package management
execute pathogen#infect()
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

let g:solarized_termtrans=1
let g:solarized_termcolors=16
let g:solarized_visibility="low"
colorscheme solarized                     " Other options: pablo
set background=dark                       " Dark background
syntax on                                 " Syntax highlighting

set autoindent                            " Autoindent
set expandtab                             " Tabs are spaces
filetype plugin indent on                 " Load filetype-specific indent files
set nocompatible                          " Make Vim more useful
set clipboard=unnamed                     " use OS clipboard

set list listchars=tab:»·,trail:·
let mapleader=","                         " Change mapleader
set tabstop=2 shiftwidth=2 softtabstop=2  " Default tabwidth
set modelines=1                           " Last line (comment) reserved to file specific vim actions

set ignorecase                            " Ignore case of searches
set incsearch                             " Dynamic highlighting
set gdefault                              " Default global search flag

set wildmenu                              " Better command-line completion
set lazyredraw                            " Faster rendering redrawing command options
set ttyfast                               " Faster terminal connections

set noeol                                 " Don’t add empty newlines at the end of files
set showcmd                               " Show partial command as being typed
set ruler                                 " Show the line and column number of the cursor position,

" Centralize backups, swapfiles and undo history. Create directories if not already present
if !isdirectory(expand("~/.vim/backupdir/"))
  silent !mkdir -p ~/.vim/backupdir
endif
if !isdirectory(expand("~/.vim/swap/"))
  silent !mkdir -p ~/.vim/swap
endif
if !isdirectory(expand("~/.vim/undo/"))
  silent !mkdir -p ~/.vim/undo
endif

set backupdir^=~/.vim/backup/              " Directory to put backup files
set directory^=~/.vim/swap/                " Directory to put swap files
set undodir^=~/.vim/undo/                  " Directory to put undo files
set backupskip=/tmp/*,/private/tmp/*       " Skip backups if editing in these directories
set writebackup

set shortmess=atI                         " Skip intro message when starting Vim
set nostartofline                         " Show cursor position, don't reset cursor to start of line
set cursorline                            " Highlight current cursor line

set showmode                              " Show current mode
set title                                 " Show filename in titlebar
set showmatch                             " Highlight matching parenthesis

set scrolloff=3                           " Start scrolling three lines before the horizontal window border

" Functions {{{
" Strip trailing white space (sws)
function! StripWhiteSpace()
  let save_cursor = getpos(".")
  let old_query = getreg('/')
  :%s/\s\+$//e
  call setpos('.', save_cursor)
  call setreg('/', old_query)
endfunction
nnoremap sws :call StripWhiteSpace()<CR>

" Toggle number view (tn)
function! ToggleNumber()
  if(&number == 1)
    set nonumber
  else
    set number
 endif
endfunc
noremap tn :call ToggleNumber()<CR>

" Toggle relative number view (tr)
function! ToggleRelativeNumber()
  if(&relativenumber == 1)
    set norelativenumber
    set number
  else
    set relativenumber
 endif
endfunc
noremap tr :call ToggleRelativeNumber()<CR>

" Toggle highlight search (ths)
function! ToggleHighlightSearch()
  if(&hlsearch == 1)
    set nohls
  else
    set hls
  endif
endfunction
nnoremap ths :call ToggleHighlightSearch()<CR>

" Change to directory of current file, window specific (,cd)
function! ChangeCurrentDirectory()
  lcd %:p:h
endfunction
nnoremap <leader>cd :call ChangeCurrentDirectory()<CR>
" }}}

" Mappings {{{
" Quicker exit from insert mode
imap jk <Esc>

" Move vertically by visual line
nnoremap j gj
nnoremap k gk

" Move to beginning/end of line, $ & ^ are too far away
nnoremap B ^
nnoremap E $
" Unbind defaults, force yourself to use B/E
nnoremap $ <nop>
nnoremap ^ <nop>

" Space opens/closes folds
nnoremap <space> za
" Super undo: ,u
nnoremap <leader>u :GundoToggle<CR>
" Highlight last inserted text
nnoremap gV `[v`]

" Edit .vimrc/.zshrc and load .vimrc bindings
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>ez :vsp ~/.zshrc<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>

" Save session/current assortment of windows so they're there next time you
" open Vim. Reopen saved session by running vim -S
nnoremap <leader>s :mksession<CR>
" Silver searcher shortcut, ag.vim plugin
nnoremap <leader>a :Ag

" Force yourself to use hjkl
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
" }}}

" CtrlP settings
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

" Airline settings, theme: solarized
set t_Co=256
let g:airline_powerline_fonts=1
let g:airline_theme='solarized'           " Options: lucius, base16
set laststatus=2                          " To show status bar on startup

" Line number settings, git gutter settings
set number
highlight LineNr cterm=NONE ctermbg=NONE

" Folding config
set foldenable
set foldlevelstart=10                     " Opens most folds by default
set foldnestmax=4                         " 4 nested fold max
set foldmethod=syntax                     " Folding based on file syntax

" vim:foldmethod=marker:foldlevel=0
